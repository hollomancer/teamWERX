name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: "--max-old-space-size=4096"

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Prettier check
        run: npx prettier --check .

      - name: Lint
        run: npx eslint lib bin

      - name: Run unit tests (core & utils)
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
        run: TEAMWERX_CI=1 npx jest --runInBand --testPathPattern="test/(core|utils)"

      - name: Run command tests (limited workers)
        id: run-command-tests
        continue-on-error: true
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
        run: TEAMWERX_CI=1 npx jest --maxWorkers=2 --testPathPattern="test/commands"

      - name: Diagnostic: detect open handles & heap trace for command tests
        if: ${{ steps.run-command-tests.outcome == 'failure' }}
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
        run: |
          mkdir -p diagnostics || true
          echo "=== Running command tests with --detectOpenHandles ===" > diagnostics/command-tests-detectOpenHandles.txt
          TEAMWERX_CI=1 npx jest --runInBand --testPathPattern="test/commands" --detectOpenHandles >> diagnostics/command-tests-detectOpenHandles.txt 2>&1 || true
          echo "=== Running command tests with node --trace-gc ===" > diagnostics/command-tests-tracegc.txt
          node --trace-gc --max-old-space-size=4096 node_modules/.bin/jest --runInBand --testPathPattern="test/commands" >> diagnostics/command-tests-tracegc.txt 2>&1 || true
          # Capture runtime and system info for post-mortem
          node -e "console.log('process.versions =', JSON.stringify(process.versions)); console.log('memoryUsage =', JSON.stringify(process.memoryUsage()))" > diagnostics/node-info.txt || true
          uname -a > diagnostics/uname.txt || true
        shell: bash

      - name: Upload command-tests diagnostics
        if: ${{ steps.run-command-tests.outcome == 'failure' }}
        uses: actions/upload-artifact@v3
        with:
          name: command-tests-diagnostics
          path: diagnostics/**

      - name: Run remaining tests (other directories)
        id: run-remaining-tests
        continue-on-error: true
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
        run: TEAMWERX_CI=1 npx jest --maxWorkers=50% --testPathIgnorePatterns=e2e

      - name: Diagnostic: detect open handles & heap trace for remaining tests
        if: ${{ steps.run-remaining-tests.outcome == 'failure' }}
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
        run: |
          mkdir -p diagnostics-remaining || true
          echo "=== Running remaining tests with --detectOpenHandles ===" > diagnostics-remaining/detectOpenHandles.txt
          TEAMWERX_CI=1 npx jest --runInBand --testPathIgnorePatterns=e2e --detectOpenHandles >> diagnostics-remaining/detectOpenHandles.txt 2>&1 || true
          echo "=== Running remaining tests with node --trace-gc ===" > diagnostics-remaining/tracegc.txt
          node --trace-gc --max-old-space-size=4096 node_modules/.bin/jest --runInBand --testPathIgnorePatterns=e2e >> diagnostics-remaining/tracegc.txt 2>&1 || true
          node -e "console.log('process.versions =', JSON.stringify(process.versions)); console.log('memoryUsage =', JSON.stringify(process.memoryUsage()))" > diagnostics-remaining/node-info.txt || true
          uname -a > diagnostics-remaining/uname.txt || true
        shell: bash

      - name: Upload remaining-tests diagnostics
        if: ${{ steps.run-remaining-tests.outcome == 'failure' }}
        uses: actions/upload-artifact@v3
        with:
          name: remaining-tests-diagnostics
          path: diagnostics-remaining/**

  e2e-test:
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: "--max-old-space-size=4096"

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run e2e tests
        id: run-e2e
        continue-on-error: true
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
        run: TEAMWERX_CI=1 npx jest test/e2e/changes-flow.test.js --runInBand --testTimeout=300000

      - name: Diagnostic: detect open handles & heap profile for e2e
        if: ${{ steps.run-e2e.outcome == 'failure' }}
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"
        run: |
          mkdir -p e2e-diagnostics || true
          echo "=== Running e2e with --detectOpenHandles ===" > e2e-diagnostics/detectOpenHandles.txt
          TEAMWERX_CI=1 npx jest test/e2e/changes-flow.test.js --runInBand --detectOpenHandles >> e2e-diagnostics/detectOpenHandles.txt 2>&1 || true
          echo "=== Running e2e with node --trace-gc ===" > e2e-diagnostics/tracegc.txt
          node --trace-gc --max-old-space-size=4096 node_modules/.bin/jest test/e2e/changes-flow.test.js --runInBand >> e2e-diagnostics/tracegc.txt 2>&1 || true
          echo "=== Attempt heap profile with --heap-prof ===" > e2e-diagnostics/heapprof.txt
          # The --heap-prof flag generates V8 heap profile output (isolate-*.heapsnapshot or v8.log) if supported by the runner/node build.
          node --heap-prof --max-old-space-size=4096 node_modules/.bin/jest test/e2e/changes-flow.test.js --runInBand >> e2e-diagnostics/heapprof.txt 2>&1 || true
          # Collect Node runtime info and any generated profile files for post-mortem
          node -e "console.log('process.versions =', JSON.stringify(process.versions)); console.log('memoryUsage =', JSON.stringify(process.memoryUsage()))" > e2e-diagnostics/node-info.txt || true
          ls -la > e2e-diagnostics/ls.txt || true
          # Collect any heap profile files that may have been created by --heap-prof
          ls -la *.heap* *.heapsnapshot v8.log 2>/dev/null || true
          mv *.heap* *.heapsnapshot v8.log e2e-diagnostics/ 2>/dev/null || true
        shell: bash

      - name: Upload e2e diagnostics
        if: ${{ steps.run-e2e.outcome == 'failure' }}
        uses: actions/upload-artifact@v3
        with:
          name: e2e-diagnostics
          path: e2e-diagnostics/**
